
<!DOCTYPE html>
<html lang="en">

<head>
  <title>Kaira - Bootstrap 5 Fashion Store HTML CSS Template</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="format-detection" content="telephone=no">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="author" content="TemplatesJungle">
  <meta name="keywords" content="ecommerce,fashion,store">
  <meta name="description" content="Bootstrap 5 Fashion Store HTML CSS Template">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="/css/vendor.css">
  <link rel="stylesheet" href="/https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
  <link rel="stylesheet" type="text/css" href="/style.css">

  <link rel="preconnect" href="/https://fonts.googleapis.com">
  <link rel="preconnect" href="/https://fonts.gstatic.com" crossorigin>
  <link href="/https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
  <link
    href="/https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&family=Marcellus&display=swap"
    rel="stylesheet">
    <link rel="stylesheet" href="/https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <%- typeof extraCSS !== 'undefined' ? extraCSS : "" %>
    <style>
      div.swiper-wrapper {
  height: 80%;
 /* Address Box Styling */

 /* General Styles */
body {
    font-family: 'Jost', sans-serif;
    background-color: #f8f9fa;
    padding: 20px;
}

h2, h3 {
    text-align: center;
    margin-bottom: 20px;
    font-weight: 600;
}

/* Address Box Styling */
.address-box {
    background: #fff;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    margin-bottom: 15px;
}

.address-box p {
    margin: 5px 0;
}

.address-box form {
    display: inline-block;
    margin-right: 10px;
}

button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 8px 12px;
    border-radius: 5px;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

/* Form Styling */
form {
    max-width: 500px;
    margin: 0 auto;
    background: #fff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

input, textarea {
    width: 100%;
    padding: 10px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

/* Responsive Design */
@media (max-width: 768px) {
    .address-box {
        padding: 10px;
    }
    form {
        width: 90%;
    }
    button {
        width: 100%;
    }
}



}
  </style>
</head>
<%-include("../../views/partials/user/header")%>
<h2 class="text-center my-4">Your Addresses</h2>

<% if (session.message) { %>
    <script>
        alert("<%= session.message %>");
    </script>
    <% session.message = null; %>
<% } %>


<div class="container">
    <% if (addresses.length > 0) { %>
        <div class="row">
            <% addresses.forEach(address => { %>
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card address-box p-3">
                        <div class="card-body">
                           
                            <strong>Select this address</strong>
                            <p><strong>Name:</strong> <%= address.name %></p>
                            <p><strong>Phone:</strong> <%= address.phone %></p>
                            <p><strong>City:</strong> <%= address.city %></p>
                            <p><strong>State:</strong> <%= address.state %></p>
                            <p><strong>Place:</strong> <%= address.place %></p>
                            <p><strong>Pincode:</strong> <%= address.pincode %></p>
                            <p><strong>Full Address:</strong> <%= address.address %></p>
                            
                            <div class="d-flex justify-content-between">
                                <form action="/profile/address/<%= address._id %>" method="get">
                                    <button type="submit" class="btn btn-primary btn-sm">Edit</button>
                                </form>
                                <button class="btn btn-danger btn-sm delete-address" data-address-id="<%= address._id %>">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
        
        
    <% } else { %>
        <p class="text-center">No addresses found. Add a new one below.</p>
    <% } %>
</div>

<!-- Add Address Form -->
<div class="container mt-5">
    <h3 class="text-center">Add New Address</h3>
    <form action="/profile/address" method="POST" class="w-75 mx-auto p-4 border rounded bg-light" onsubmit="return validate()">
        <div class="mb-3">
            <input type="text" name="name"  id="name" class="form-control" placeholder="Full Name" >
        </div>
        <div class="mb-3">
            <input type="text" name="phone" id="phone" class="form-control" placeholder="Phone" >
        </div>
        <div class="mb-3">
            <input type="text" name="city" id="city" class="form-control" placeholder="City" >
        </div>
        <div class="mb-3">
            <input type="text" name="state" id="state" class="form-control" placeholder="State" >
        </div>
        <div class="mb-3">
            <input type="text" name="place"  id="place"  class="form-control" placeholder="Place" >
        </div>
        <div class="mb-3">
            <input type="text" name="pincode" id="pincode" class="form-control" placeholder="Pincode" >
        </div>
        <div class="mb-3">
            <textarea name="address" class="form-control" id="address" placeholder="Address" ></textarea>
        </div>
        <button type="submit" class="btn btn-success w-100">Add Address</button>
    </form>
</div>

<%-include("../../views/partials/user/footer")%>
<script src="/js/jquery.min.js"></script>
<script src="/js/plugins.js"></script>
<script src="/js/SmoothScroll.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
  crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
<script src="/js/script.min.js"></script>
<script>
 document.addEventListener('DOMContentLoaded',function(){
    initClearSearch();
   
    addressDelete()



  
 })

 function initClearSearch() {
             const clearBtn = document.getElementById("clear-search");
               const searchInput = document.getElementById("search-form");
                if (clearBtn && searchInput) {
              clearBtn.addEventListener("click", function () {
              searchInput.value = "";
            window.location.href = "/shop";
                });
             }
        }

 function validate(){
    let fields = ["name", "phone", "city", "state", "place", "pincode", "address"];
    let messages = {
            name: "Full Name cannot be empty.",
            phone: "Please enter a valid 10-digit phone number.",
            city: "City cannot be empty.",
            state: "State cannot be empty.",
            place: "Place cannot be empty.",
            pincode: "Please enter a valid 6-digit pincode.",
            address: "Address must be at least 10 characters long."
        };
    for (let field of fields){
        let input=document.getElementById(field)
        if(input.value.trim()===""){
            alert(messages[field])
            input.focus();
            return false
        }
    }
    let phone = document.getElementById("phone").value.trim();
    let pincode = document.getElementById("pincode").value.trim();

    let phoneRegex = /^[0-9]{10}$/;
        if (!phoneRegex.test(phone)) {
            alert(messages.phone);
            document.getElementById("phone").focus();
        return false;
        }

        let pincodeRegex = /^[0-9]{6}$/;
        if (!pincodeRegex.test(pincode)) {
            alert(messages.pincode);
            document.getElementById("pincode").focus();
        return false;
        }
        return true;

 }
function addressDelete(){

    document.querySelectorAll(".delete-address").forEach(button => {
    button.addEventListener("click", async function () {
        const addressId = this.getAttribute("data-address-id");

        if (!confirm("Are you sure you want to delete this address?")) {
            return; // Stop execution if user cancels
        }

        try {
            const response = await fetch(`/profile/address/${addressId}`, {
                method: "DELETE",
            });

            const data = await response.json(); // Convert response to JSON


            if (data.success) {
                alert("Address deleted successfully!");
                location.reload();
                
            } else {
                alert("Failed to delete address.");
            }
        } catch (error) {
            console.error("Error:", error);
            alert("Something went wrong!");
        }
    });
});


}


 

 
</script>

</body>

</html>
