
  <!DOCTYPE html>
<html lang="en">

<head>
  <title>BookD</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="format-detection" content="telephone=no">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="author" content="TemplatesJungle">
  <meta name="keywords" content="ecommerce,fashion,store">
  <meta name="description" content="Bootstrap 5 Fashion Store HTML CSS Template">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="css/vendor.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
  <link rel="stylesheet" type="text/css" href="style.css">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
  <link
    href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&family=Marcellus&display=swap"
    rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    
    <style>
      div.swiper-wrapper {
  height: 80%;
}
/* Container for centering */


/* Heading */
h2 {
  color: #dc3545; /* Bootstrap danger color */
  font-size: 2rem;
  margin-bottom: 15px;
}

/* Paragraph */
p {
  font-size: 1.1rem;
  color: #555;
  margin-bottom: 30px;
}

/* Button Styles */
.btn {
  display: inline-block;
  padding: 10px 20px;
  font-size: 1rem;
  text-decoration: none;
  border-radius: 6px;
  margin: 5px;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

/* Button Colors */
.btn-secondary {
  background-color: #6c757d;
  color: #fff;
}

.btn-secondary:hover {
  background-color: #5a6268;
  transform: scale(1.05);
}

.btn-warning {
  background-color: #ffc107;
  color: #212529;
}

.btn-warning:hover {
  background-color: #e0a800;
  transform: scale(1.05);
}


  </style>
</head>
<%-include("../../views/partials/user/header")%>

  <div class="container text-center mt-5">
    
    <h2 class="mt-4">Payment Failed!</h2>
    <p>Oops! Something went wrong during the transaction.</p>
    <div class="mt-3">
      
      <a href="/orders/view/<%= orderId %>" class="btn btn-secondary">View Order Details</a>
      
      <a href="#" id="retryBtn" data-orderid="<%= orderId %>" class="btn btn-warning">Retry Payment</a>

    </div>
  </div>
  <%-include("../../views/partials/user/footer")%>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="js/jquery.min.js"></script>
  <script src="js/plugins.js"></script>
  <script src="js/SmoothScroll.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
  <script src="js/script.min.js"></script>
  <script>
   document.addEventListener('DOMContentLoaded',function(){
    const clearBtn=document.getElementById('clear-search')
    const searchInput=document.getElementById('search-form')
    if(clearBtn&&searchInput){
      clearBtn.addEventListener('click',function(){
        searchInput.value="";
        window.location.href="/shop"
      })
    }
   })


   const retryBtn = document.getElementById("retryBtn");
  if (retryBtn) {
    retryBtn.addEventListener("click", async function(e) {
      e.preventDefault();
      const orderId = retryBtn.getAttribute("data-orderid");
      
      await retryPayment(orderId);
    });
  } 


   async function retryPayment(orderId) {
      
  try {
    const res = await fetch(`/retry-payment/${orderId}`);
    const response = await res.json();

    if (response.success) {
      
      initiateRazorpayPayment(response); // Use the same existing function
    } else {
      alert("Retry failed. Please try again later.");
    }
  } catch (error) {
    console.error("Error during retry:", error);
  }
}



function initiateRazorpayPayment(response) {

const savedOrderId = response.savedOrderId; 
  const options = {
      key: response.key,  
      amount: response.amount,  
      currency: 'INR',
      order_id: response.razorpayOrderId,  
      name: response.customerName,
      description: "Order payment",
      image: "path_to_logo",  
      handler: function (paymentResponse) {
        console.log("Payment Response: ", paymentResponse);
          verifyPayment(paymentResponse, savedOrderId);
      },
      prefill: {
          name: response.customerName,
          email: response.customerEmail,
          contact: response.customerPhone
      },
      notes: {
          address: response.customerAddress,
          order_id: savedOrderId
      }
  };

  const razorpay = new Razorpay(options);

    
    razorpay.on('payment.failed', async function (response) {

      
      await fetch('/payment-failure', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
          orderId: savedOrderId,
          reason: response.error.description || "Payment failed"
      })
  });
      

      window.location.href = `/payment-failure?orderId=${savedOrderId}`; 
      
  });

  razorpay.open();
}


async function verifyPayment(paymentResponse, savedOrderId) {
  try {
    

      const res = await fetch(`/verify-payment`, {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify({
              razorpayOrderId: paymentResponse.razorpay_order_id,
              paymentId: paymentResponse.razorpay_payment_id,
              signature: paymentResponse.razorpay_signature,
              orderId: savedOrderId
          })
      });
      const result = await res.json();
      if (result.success) {
          window.location.href = `/orders/success/${savedOrderId}`;
      } else {
        window.location.href = `/order-failure?orderId=${savedOrderId}`;
        
      }
  } catch (error) {
      
      window.location.href = `/order-failure?orderId=${savedOrderId}`;
  }
}


   
  </script>
  
</body>

</html>


  
  

  