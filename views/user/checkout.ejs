<!DOCTYPE html>
<html lang="en">

<head>
  <title>Kaira - Bootstrap 5 Fashion Store HTML CSS Template</title>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="format-detection" content="telephone=no">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="author" content="TemplatesJungle">
  <meta name="keywords" content="ecommerce,fashion,store">
  <meta name="description" content="Bootstrap 5 Fashion Store HTML CSS Template">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="css/vendor.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
  <link rel="stylesheet" type="text/css" href="style.css">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
  <link
    href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&family=Marcellus&display=swap"
    rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <%- typeof extraCSS !== 'undefined' ? extraCSS : "" %>
    <style>
      div.swiper-wrapper {
  height: 80%;
}

/* Headings */
h3, h4, h5 {
  margin-bottom: 15px;
  color: #333;
}

/* Cards */
.card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 5px;
  padding: 15px;
  margin-bottom: 15px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Card Images */
.card img {
  max-width: 100%;
  border-radius: 5px;
}

/* Address Cards */
.card label {
  display: block;
  margin-bottom: 8px;
  cursor: pointer;
  font-weight: bold;
}

.card input[type="radio"] {
  margin-right: 10px;
}

/* Order Summary Section */
.price-summary {
  border-top: 1px solid #ddd;
  padding-top: 15px;
}

.price-summary p,
.price-summary h5 {
  margin: 10px 0;
}
/* Limit the width of address cards */
.address-card {
  max-width: 600px; /* Adjust width as needed */
  margin: 0 auto 15px auto; /* Center the card and add bottom margin */
  padding: 15px;
  border: 1px solid #ddd;
  border-radius: 5px;
  background-color: #fff;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* Optional: Adjust label styles for address cards */
.address-card label {
  display: block;
  margin-bottom: 8px;
  cursor: pointer;
  font-weight: bold;
}


/* Buttons */
.btn {
  display: inline-block;
  font-weight: 600;
  text-align: center;
  vertical-align: middle;
  user-select: none;
  border: 1px solid transparent;
  padding: 0.5rem 1rem;
  font-size: 1rem;
  line-height: 1.5;
  border-radius: 0.3rem;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

.btn-sm {
  padding: 0.25rem 0.5rem; /* Reduce vertical and horizontal padding */
  font-size: 0.875rem; /* Slightly smaller font */
  line-height: 1.2; /* Reduce line height */
}
.small-btn {
  padding: 2px 6px; /* Minimal padding */
  font-size: 12px; /* Smaller font */
  line-height: 1; /* Compact height */
}


.btn-primary {
  color: #fff;
  background-color: #007bff;
  border-color: #007bff;
}

.btn-primary:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .row {
    flex-direction: column;
  }
  .col-md-8,
  .col-md-4 {
    max-width: 100%;
    flex: 0 0 100%;
  }
}

#couponModal {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: none;
  justify-content: center;
  align-items: center;
}

#couponModal > div {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
}
  </style>
</head>
<%-include("../../views/partials/user/header")%>

<div class="container">

     <!--  Display Books in Checkout -->
     <h3>Order Summary</h3>
     <div class="row">
         <div class="col-md-8">
             <% cartItems.forEach(item => { %>
                 <div class="card p-3 mb-2">
                     <div class="row">
                         <div class="col-md-3">
                             <img src="<%= item.bookData ? item.bookData.book_images : item.bookImage %>" class="img-fluid rounded" alt="<%= item.bookData ? item.bookData.title:item.title %>">
                         </div>
                         <div class="col-md-6">
                             <h5><%= item.bookData ? item.bookData.title : item.title %></h5>
                             <p ><strong>Price:</strong>  <span style="text-decoration: line-through;">₹<%= item.bookData ? item.bookData.price : 
                              item.price %></span></p>            
                                <span style="color: green; font-size: 1.6rem;">₹<%= item.discountedPrice %></span>
                            

                             <p><strong>Quantity:</strong> <%= item.quantity %></p>
                             <p><strong>Total:</strong> ₹<%= item.discountedPrice*item.quantity %></p>
                         </div>
                     </div>
                 </div>
             <% }) %>
         </div>
          <!--  Order Summary & Final Price -->
        <div class="col-md-4">
            <div class="card p-3">
                <h4>Price Summary</h4>
                <p id="subtotal" ><strong>Total:</strong> ₹<%= subtotal %></p>
                <p id="tax"><strong>Tax (5%):</strong> ₹<%= tax %></p>
                
                <hr>
                
                <h5><strong>Final Total:</strong> <span id="final-total">₹<%= finalTotal.toFixed(2) %></span></h5>

               
                <form id="placeOrderForm" method="POST" action="/place-order">
                  <input type="hidden" name="addressId" id="selectedAddressInput">
                  <input type="hidden" name="paymentMethod" id="selectedPaymentInput">
                  
                  <% if (cartItems.length === 1 && cartItems[0].quantity === 1) { %>
                    
                    <input type="hidden" name="book" value="<%= cartItems[0].bookId %>">
                    <input type="hidden" name="quantity" value="1">
                <% } else { %>
                    
                    <% cartItems.forEach(item => { %>
                        <input type="hidden" name="books[]" value="<%= item.bookId %>">
                    <% }) %>
                <% } %>
                  <button type="submit" class="btn btn-primary w-100" id="placeOrderBtn" disabled>Place Order</button>
              </form>
              
            </div>
        </div>
        </div>
 <div class="row ">

  <div class="col-md-8">
    <h3>Select a Delivery Address</h3>
    <a href="/profile/address?from=checkout" class="btn btn-success mb-2 w-auto ">Add New Address</a>
   </div>
   <div class="col-md-4">
    
   </div>
     
    <% if (addresses.length > 0) { %>
        <% addresses.forEach((address, index) => { %>
            <div class="col-md-4 mb-3 d-flex ">
                <div class="card p-2  flex-fill">

                    <label>
                        <input type="radio" name="selectedAddress" 
                               value="<%= address._id %>" 
                               class="select-address"
                               <% if (index === 0) { %> checked <% } %> >
                        <strong>Select this address</strong>
                    </label>
                    <p><strong>Name:</strong> <%= address.name %></p>
                    <p><strong>Phone:</strong> <%= address.phone %></p>
                    <p><strong>City:</strong> <%= address.city %></p>
                    <p><strong>State:</strong> <%= address.state %></p>
                    <p><strong>Place:</strong> <%= address.place %></p>
                    <p><strong>Pincode:</strong> <%= address.pincode %></p>
                    <p><strong>Full Address:</strong> <%= address.address %></p>

                    <div class="text-center mt-auto">
                        <a  class="btn btn-primary btn-sm" href="/profile/address/<%= address._id %>?from=checkout">Edit</a>
                      </div>

                </div>
                
            </div>
            
        <% }) %>
    <% } else { %>
        <p>No saved addresses found. Please add a new address.</p>
    <% } %>
    <hr>       
</div>

<div class="row">
  <div class="">
      <h3>Select a Payment Method</h3>
  </div>

  <div class="col-md-4">
      <div class="card p-3">
          <label>
              <input type="radio" name="paymentMethod" value="cod" class="select-payment">
              <strong>Cash on Delivery</strong>
          </label>
      </div>
  </div>

  <div class="col-md-4">
      <div class="card p-3">
          <label>
              <input type="radio" name="paymentMethod" value="online" class="select-payment">
              <strong>Online Payment</strong>
          </label>
      </div>
  </div>
</div>

<!-- Coupon Selection -->

<form id="couponForm">
  <label for="couponInput">Enter Coupon Code:</label>
  <input type="text" id="couponInput" name="couponCode" placeholder="Enter your code">
  <button  class="btn btn-success mb-2 w-auto" type="submit">Apply Coupon</button>

  
  <button  class="btn btn-primary mb-2 w-auto"  type="button" onclick="openCouponModal()">View Available Coupons</button>
</form>

<div id="appliedCouponSection" style="display: none;">
  <p>Coupon <strong id="appliedCouponCode"></strong> applied!</p>
  <button class="btn btn-danger mb-2 w-auto" onclick="removeCoupon()">Remove Coupon</button>
</div>


<!-- Coupon Modal -->
<div id="couponModal" style="display: none;">
  <div style="background: white; padding: 20px;">
    <h3>Available Coupons</h3>
    <ul>
      <% coupons.forEach(coupon => { %>
        <li>
          <strong><%= coupon.code %></strong> - 
          <%= coupon.discountType === 'percentage' ? coupon.discountValue + '%' : '₹' + coupon.discountValue %>
        </li>
      <% }); %>
    </ul>
    <button class="btn btn-secondary  mb-2 w-auto"  onclick="closeCouponModal()">Close</button>
  </div>
</div>



   
</div>


<%-include("../../views/partials/user/footer")%>
  <script src="js/jquery.min.js"></script>
  <script src="js/plugins.js"></script>
  <script src="js/SmoothScroll.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
    crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
  <script src="js/script.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
   document.addEventListener('DOMContentLoaded',function(){
    initClearSearch()
    select()
    applyCoupon()
    openCouponModal()
    closeCouponModal()
    
    
   })

   function initClearSearch(){

const clearBtn=document.getElementById('clear-search')
const searchInput=document.getElementById('search-form')
if(clearBtn&&searchInput){
clearBtn.addEventListener('click',function(){
searchInput.value="";
window.location.href="/shop"
})

}}

   function select(){
    const orderForm = document.getElementById("placeOrderForm");
    const addressRadios = document.querySelectorAll("input[name='selectedAddress']");
    const paymentRadios = document.querySelectorAll("input[name='paymentMethod']");
    const addressInput = document.getElementById("selectedAddressInput");
    const paymentInput = document.getElementById("selectedPaymentInput");
    const cartItems = document.querySelectorAll("input[name='books[]']");
    const buyNowItem = document.querySelector("input[name='book']");
    const placeOrderBtn = document.getElementById("placeOrderBtn");
   
   placeOrderBtn.disabled = (cartItems.length === 0 && !buyNowItem);


    orderForm.addEventListener('submit',function(event){
      let addressSelected = false;
      let paymentSelected = false;

      addressRadios.forEach((radio) => {
            if (radio.checked) {
                addressSelected = true;
                addressInput.value = radio.value; // Store selected address
            }
        });

        paymentRadios.forEach((radio) => {
            if (radio.checked) {
                paymentSelected = true;
                paymentInput.value = radio.value; // Store selected payment method
            }
        });
      
        if (cartItems.length === 0&&!buyNowItem) {
            alert("Your cart is empty. Please add books before placing an order.");
            event.preventDefault();
            return;
        }
        if (!addressSelected) {
            alert("Please select a delivery address.");
            event.preventDefault();
            return;
        }

        if (!paymentSelected) {
            alert("Please select a payment method.");
            event.preventDefault();
            return;
        }



    })


    
   }

   function applyCoupon(){
    
    document.getElementById('couponForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    const couponCode = document.getElementById('couponInput').value.trim();
    if (!couponCode) return;

    try {
        const response = await fetch('/apply-coupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode })
        });

        const result = await response.json();

        if (result.success) {
            document.getElementById('tax').innerHTML = `₹${result.tax.toFixed(2)}`;
            document.getElementById('final-total').innerHTML = `₹${result.finalTotal.toFixed(2)}`;


            // Show applied coupon section
            document.getElementById('appliedCouponCode').textContent = couponCode;
             document.getElementById('appliedCouponSection').style.display = 'block';


            Swal.fire({
                icon: 'success',
                title: 'Coupon Applied!',
                text: `Discount Applied: ₹${result.discount.toFixed(2)}`
            });

        } else {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Coupon',
                text: result.error
            });
        }

    } catch (err) {
        console.error("AJAX Error:", err);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Something went wrong.'
        });
    }
});

   }

   function openCouponModal() {
    document.getElementById('couponModal').style.display = 'block';
}

function closeCouponModal() {
    document.getElementById('couponModal').style.display = 'none';
}

function removeCoupon() {
  fetch('/remove-coupon', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({})
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      // Hide the applied coupon section
      document.getElementById('appliedCouponSection').style.display = 'none';
      // Optionally, update the totals displayed on the page
      updateTotals(data.subtotal, data.tax, data.finalTotal);
    } else {
      alert('Failed to remove coupon: ' + data.error);
    }
  })
  .catch(error => {
    console.error('Error:', error);
  });
}

function updateTotals(subtotal, tax, finalTotal) {
  // Update the DOM elements displaying the totals
  document.getElementById('subtotal').textContent = '₹' + subtotal.toFixed(2);
  document.getElementById('tax').textContent = '₹' + tax.toFixed(2);
  document.getElementById('final-total').textContent = '₹' + finalTotal.toFixed(2);
}

   
  </script>
  
</body>

</html>
