<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
  <style>
    /* General Styles */


/* Apply input-like styling to the category dropdown */
/* General Form Styles */
.offer-form {
  background-color: #f9f9f9;
  padding: 30px;
  border-radius: 12px;
  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

.offer-form .form-label {
  font-weight: 500;
  margin-bottom: 2px; /* reduced */
  color: #444;
  display: block;
}

/* Headings */
.offer-form h3 {
  font-size: 24px;
  color: #333;
  font-weight: 600;
}

/* Labels */


/* Input, Select Fields */
.offer-form .form-control {
  padding: 10px;
  font-size: 14px;
  border-radius: 5px;
  border: 1px solid #ccc;
  background-color: #fff;
  transition: border-color 0.3s, box-shadow 0.3s;
}

/* Input/Select Focus Style */
.offer-form .form-control:focus {
  border-color: #4a90e2;
  box-shadow: 0 0 5px rgba(74, 144, 226, 0.5);
  outline: none;
}

/* Button Style */
.add-btn {
  background-color: #4a90e2;
  color: #fff;
  padding: 10px 25px;
  border: none;
  border-radius: 6px;
  font-size: 16px;
  transition: background-color 0.3s;
}

.add-btn:hover {
  background-color: #3a7bd5;
}

/* Custom Dropdown */
.custom-dropdown {
  width: 25%;
  padding: 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 14px;
  background-color: #fff;
  text-align: left;
  transition: border-color 0.3s, box-shadow 0.3s;
}

.custom-dropdown:focus,
.custom-dropdown:active {
  outline: none;
  border-color: #4a90e2;
  box-shadow: 0px 0px 5px rgba(74, 144, 226, 0.5);
}

/* Dropdown Menu Items */
.dropdown-menu li {
    display: flex;
  align-items: center;
  gap: 8px; /* small gap between label and checkbox */
  padding: 5px 8px;
  cursor: pointer;
  justify-content: flex-start;
}


/* Checkbox alignment */


/* Error Message Styling */
.text-danger {
  font-size: 13px;
  color: #dc3545;
}

/* Responsive Padding Adjustments */
@media (max-width: 768px) {
  .offer-form {
    padding: 20px;
  }

  .add-btn {
    width: 100%;
    margin-top: 25%;
  }
}

.sub{
    margin-top: 25px;
}
        
    </style> 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    
</head>
<%-include("../../views/partials/admin/header")%>
<div class="row justify-content-center ">
    <div class="col-lg-8">
      <div class="offer-form mx-auto">
        <h3 class="text-center mb-4">Add New Offer</h3>
        <form action="/admin/offers/add" method="POST">
          <div class="row">
  
            <!-- Offer Name -->
            <div class="col-md-6 mb-3 offerdiv">
              <label for="name" class="form-label">Offer Name</label>
              <input type="text" class="form-control" id="name" name="name" >
            </div>
  
            <!-- Discount Value -->
            <div class="col-md-6 mb- offerdiv">
              <label for="discount_value" class="form-label">Discount Value</label>
              <input type="number" class="form-control" id="discount_value" name="discount_value" >
            </div>
  
            <!-- Discount Type -->
            <div class="col-md-6 mb-3 offerdiv">
              <label for="discount_type" class="form-label">Discount Type</label>
              <select class="form-control" id="discount_type" name="discount_type" >
                <option value="percentage">Percentage</option>
              </select>
            </div>
  
            <!-- Apply To (Book or Category) -->
            <div class="col-md-6 mb-3 offerdiv">
              <label for="applyTo" class="form-label">Apply To</label>
              <select class="form-control" id="applyTo" name="applyTo" >
                <option value="category">Category</option>
                <option value="book">Book</option>
              </select>
            </div>
  
            <!-- Category Selection -->
            <div class="col-md-6 mb-3 offerdiv" id="categorySection">
              <label for="category_id" class="form-label">Select Category</label>
              <select class="form-control" id="category_id" name="category_id">
                <option value="">-- Select Category --</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
                <% }) %>
              </select>
            </div>
  
            <!-- Book Selection -->
            <div class="col-md-6 mb-3 " id="bookSection">
                  <div class="form-group  offerdiv">
                    <label for="bookDropdown">Select Books</label>
                    <div class="dropdown">
                      <button class="form-select custom-dropdown w-100 text-start" type="button" id="bookDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        Select Books
                      </button>
                      <ul class="dropdown-menu p-2" aria-labelledby="bookDropdown" style="max-height: 200px; overflow-y: auto;">
                        <% books.forEach(book => { %>
                          <li>
                            <label class="form-check-label" for="book_<%= book._id %>"><%= book.title %></label>
                            <input class="form-check-input me-2 book-checkbox" type="checkbox" name="book_ids[]" value="<%= book._id %>" id="book_<%= book._id %>">
                          </li>
                        <% }) %>
                      </ul>
                    </div>
                    <span id="bookError" class="text-danger"></span>
                  </div>
                </h3>
              </div>
              
  
            <!-- Start Date -->
            <div class="col-md-6 mb-3 offerdiv">
              <label for="start_date" class="form-label">Start Date</label>
              <input type="date" class="form-control" id="start_date" name="start_date" >
            </div>
  
            <!-- Expiry Date -->
            <div class="col-md-6 mb-3 offerdiv">
              <label for="expire_date" class="form-label">Expiry Date</label>
              <input type="date" class="form-control" id="expire_date" name="expire_date" >
            </div>
  
            <!-- Status -->
            <div class="col-md-6 mb-5 offerdiv">
              <label for="status" class="form-label">Status</label>
              <select class="form-control" id="status" name="status">
                <option value="active">Active</option>
                <option value="inactive">Inactive</option>
              </select>
            </div >
  
            <!-- Submit -->
            <div class="col-12 text-center mt-5 sub">
              <button type="submit" class="btn add-btn btn-primary">Add Offer</button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</main>

</div>
</div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
   document.addEventListener("DOMContentLoaded", function () {
  applytoSelect()
  validate()

});
   
function applytoSelect(){


    const applyTo = document.getElementById("applyTo");
  const categorySection = document.getElementById("categorySection");
  const bookSection = document.getElementById("bookSection");
  const bookDropdown = document.getElementById("bookDropdown");

  function updateBookButtonText() {
    const bookCheckboxes = document.querySelectorAll(".book-checkbox");
    let selectedBooks = [];
    bookCheckboxes.forEach(checkbox => {
      if (checkbox.checked) {
        selectedBooks.push(checkbox.closest("li").querySelector("label").textContent.trim());
      }
    });

    bookDropdown.innerText = selectedBooks.length > 0 ? selectedBooks.join(", ") : "Select Books";
  }

  function bindBookCheckboxEvents() {
    const bookCheckboxes = document.querySelectorAll(".book-checkbox");
    bookCheckboxes.forEach(checkbox => {
      checkbox.addEventListener("change", updateBookButtonText);
    });
  }

  function toggleSections() {
    if (applyTo.value === "category") {
      categorySection.style.display = "block";
      bookSection.style.display = "none";
    } else {
      categorySection.style.display = "none";
      bookSection.style.display = "block";
      bindBookCheckboxEvents();
      updateBookButtonText();
    }
  }

  applyTo.addEventListener("change", toggleSections);
  toggleSections(); // Call initially

}

 function validate(){
    const form = document.querySelector("form");
    const applyTo = document.getElementById("applyTo");
    const categorySection = document.getElementById("categorySection");
    const bookSection = document.getElementById("bookSection");
    const bookError = document.getElementById("bookError");

    function toggleSections() {
      if (applyTo.value === "category") {
        categorySection.style.display = "block";
        bookSection.style.display = "none";
      } else if (applyTo.value === "book") {
        categorySection.style.display = "none";
        bookSection.style.display = "block";
      }
    }

    applyTo.addEventListener("change", toggleSections);
    toggleSections(); 

    form.addEventListener("submit", async function (e) {
      bookError.innerText = "";

 
  const name = document.getElementById("name").value.trim();
  const discountValue = document.getElementById("discount_value").value.trim();
  const startDate = document.getElementById("start_date").value.trim();
  const expireDate = document.getElementById("expire_date").value.trim();
  const applyToValue = applyTo.value;
  const selectedCategory = document.getElementById("category_id").value.trim();
  const selectedBooks = document.querySelectorAll(".book-checkbox:checked");

  if (
    name === "" &&
    discountValue === "" &&
    startDate === "" &&
    expireDate === "" &&
    (applyToValue === "category" ? selectedCategory === "" : selectedBooks.length === 0)
  ) {
    e.preventDefault();
    await Swal.fire("Validation Error", "Please fill the form", "error");
    return;
  }

  
  if (name === "") {
    e.preventDefault();
    await Swal.fire("Validation Error", "Offer Name is required", "error");
    return;
  }

  if (!discountValue || discountValue <= 0||discountValue>=100) {
    e.preventDefault();
    await Swal.fire("Validation Error", "Enter a valid Discount Value greater than 0 less than 100", "error");
    return;
  }

  if (isNaN(new Date(startDate)) || isNaN(new Date(expireDate))) {
    e.preventDefault();
    await Swal.fire("Validation Error", "Please select both Start and Expiry dates", "error");
    return;
  } else if (new Date(startDate) >= new Date(expireDate)) {
    e.preventDefault();
    await Swal.fire("Validation Error", "Expiry Date must be after Start Date", "error");
    return;
  }

  if (applyToValue === "category" && selectedCategory === "") {
    e.preventDefault();
    await Swal.fire("Validation Error", "Please select a category", "error");
    return;
  }

  if (applyToValue === "book" && selectedBooks.length === 0) {
    e.preventDefault();
    bookError.innerText = "Please select at least one book.";
    await Swal.fire("Validation Error", "Please select at least one book", "error");
    return;
  }
});}

 

  </script>
  