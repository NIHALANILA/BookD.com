<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <style>
      /* General form styling */
#couponForm {
  max-width: 500px;
  margin: 40px auto;
  padding: 20px;
  background: #f9f9f9;
  border-radius: 12px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

/* Labels styling */
#couponForm label {
  display: block;
  margin-bottom: 6px;
  font-weight: bold;
  color: #333;
}

/* Inputs, Selects styling */
#couponForm input,
#couponForm select {
  width: 100%;
  padding: 10px;
  margin-bottom: 15px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 16px;
  background-color: #fff;
  box-sizing: border-box;
}

/* Submit Button */
#couponForm button {
  width: 100%;
  padding: 12px;
  background-color: #007bff;
  color: #fff;
  font-size: 18px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#couponForm button:hover {
  background-color: #0056b3;
}

/* Responsive */
@media (max-width: 600px) {
  #couponForm {
    padding: 15px;
  }

  #couponForm input,
  #couponForm select,
  #couponForm button {
    font-size: 14px;
    padding: 8px;
  }
}

    </style>
</head>
<body>
    


<%-include("../../views/partials/admin/header")%>

<section class="content">
    <h2>Add Coupon</h2>
  
  
    <form  id="couponForm" class="form-group">
      <label for="code">Coupon Code:</label>
      <input type="text" name="code"  class="form-control">
      <span class="text-danger" id="codeError"></span>
  
      <label for="discountType">Discount Type:</label>
      <select name="discountType" class="form-select" required>
        <option value="percentage">Percentage</option>
        <option value="fixed">Fixed Amount</option>
      </select>
      <span class="text-danger" id="discountTypeError"></span>
  
      <label for="discountValue">Discount Value:</label>
      <input type="number" name="discountValue"  class="form-control">
      <span class="text-danger" id="discountValueError"></span>
  
      <label for="minimumPrice">Minimum Purchase Price </label>
      <input type="number" name="minimumPrice" class="form-control">
      <span class="text-danger" id="minimumPriceError"></span>
  
      <label for="limit">Usage Limit </label>
      <input type="number" name="limit"  class="form-control">
      <span class="text-danger" id="limitError"></span>
      <label for="limitPerUser"> Limit Per User </label>
      <select name="limitPerUser" id="limitPerUser">
        <option value="true">Only once</option>
        <option value="false">unlimited</option>
      </select>
      <span class="text-danger" id="limitPerUserError"></span>
  
      
  
      <label for="expireDate">Expiry Date:</label>
      <input type="date" name="expireDate"  class="form-control">
      <span class="text-danger" id="expireDateError"></span>
      <label for="isActive">Is Active:</label>
      <select name="isActive" id="isActive">
        <option value="yes">yes</option>
        <option value="no">no</option>
      </select>
      <span class="text-danger" id="isActiveError"></span>
  
      <button type="submit" class="btn btn-primary mt-3">Add Coupon</button>
    </form>
  </section>

</main>

</div>
</div>
  

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {

      
    document.getElementById("couponForm").addEventListener("submit", async function (e) {
    e.preventDefault();

    const errorFields = document.querySelectorAll(".text-danger");
    errorFields.forEach(el => el.textContent = ""); 

    const form = e.target;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData.entries());
    

    let hasError=false;

    if(!data.code){
      document.getElementById("codeError").textContent="coupon code needed ";

      hasError=true;

    }
    if(!data.discountValue){
      document.getElementById('discountValueError').textContent="discount value should be gven";
      hasError=true
    }
    if(data.discountValue<0){
      document.getElementById('discountValueError').textContent="discount value should be positive";
      hasError=true
    }
  
    if(data.discountType="percentage"&&data.discountValue>100){
      document.getElementById('discountValueError').textContent="invalid discount value"
    }

    if(!data.expireDate){
      document.getElementById('expireDateError').textContent="expire date should be given"
      hasError=true;
    }

    if(!data.minimumPrice){
      document.getElementById('minimumPriceError').textContent="minimum price is required"
      hasError=true;
    }
    if(data.minimumPrice<0){
      document.getElementById('minimumPriceError').textContent="minimum price should be positive"
      hasError=true;
    }
  if(!data.limit||data.limit<0){
    document.getElementById('limitError').textContent="usage limit is not provided or invalid limit"
    hasError=true
  }
    if(hasError) return

   
    
    data.discountValue = Number(data.discountValue);
    if (data.minimumPrice) data.minimumPrice = Number(data.minimumPrice);
    if (data.limit) data.limit = Number(data.limit);

    try {
      const res = await fetch("/admin/coupons/add", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      const result = await res.json();

      if (res.ok) {
        Swal.fire({
          title: "Success",
          text: result.message || "Coupon added successfully!",
          icon: "success",
          confirmButtonText: "OK"
        }).then(() => {
          window.location.href = "/admin/coupons";
        });
      } else {
        Swal.fire("Error", result.message || "Something went wrong.", "error");
      }
    } catch (error) {
      Swal.fire("Error", "Network error or server issue.", "error");
    }
  });


    })


  </script>
    
  </body>
  </html>
  