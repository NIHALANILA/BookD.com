<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Report</title>
  <style>
    /* public/css/sales-report.css */
  
.chart-container {
    width: 100%;
    height: 300px;
    
  }
</style>
 


</head>
<%-include("../../views/partials/admin/header")%>
            <!-- Book Management Section -->

            <!-- Filter Form -->
  <form  class="user-search-form" action="/admin//dashboard" method="get">
    <div class="form-group">
      <label for="filterType">Filter By</label>
      <select name="filterType" id="filterType" class="form-control">
        <option value="today" <%= filterType === 'today' ? 'selected' : '' %>>Today</option>
        <option value="week" <%= filterType === 'week' ? 'selected' : '' %>>This Week</option>
        <option value="month" <%= filterType === 'month' ? 'selected' : '' %>>This Month</option>
        <option value="year" <%= filterType === 'year' ? 'selected' : '' %>>This Year</option>
        <option value="custom" <%= filterType === 'custom' ? 'selected' : '' %>>Custom Range</option>
      </select>
    </div>

    
    <div id="customDateRange" class="form-group" style="display: none;">
      <label for="fromDate">From Date</label>
      <input type="date" name="fromDate" id="fromDate" class="form-control">
      <label for="toDate">To Date</label>
      <input type="date" name="toDate" id="toDate" class="form-control">
    </div>

    <button type="submit" class="btn btn-primary">Apply Filter</button>
  </form>
  <% if (from && to) { %>
    <h3 class="center-text">Overall Business from <%= moment(from).format('DD MMM YYYY') %> to <%= moment(to).format('DD MMM YYYY') %></h3>
  <% } else { %>
    <h3 class="center-text">Overall Business</h3>
  <% } %>
 

  <div class="row justify-content-center  mt-4">
    <div class="col-md-8 mb-4">
      <div class="chart-container">
        <canvas id="orderStatusCountChart"></canvas>
      </div>
    </div>
    <div class="col-md-4 mb-4">
      <div class="chart-container">
        <canvas id="orderStatusAmountChart"></canvas>
      </div>
    </div>
  </div>
  
  
  
<h2>Best Selling Books</h2>
<table class=" book-table">
  <thead>
    <tr>
      <th>Top ten</th>
      <th>Book name</th>
      <th>Quantity Sold</th>
      <th>Total Amount</th>
      <th>Total Offer applied</th>
    </tr>
  </thead>
  <tbody>
    <% result.bookDetails.forEach((book,ind) => { %>
      <tr>
        <td><%=ind+1 %></td>
        <td><%= book.bookName %></td>
        <td><%= book.totalQuantitySold %></td>
        <td><%= book.totalPrice %></td>
        <td><%= book. totalOfferDiscount.toFixed(2) %></td>
      </tr>
    <% }) %>
  </tbody>
</table>
<h2>Best Selling Categories</h2>
<table class=" book-table">
  <thead>
    <tr>
      <th>Top ten</th>
      <th>Category name</th>
      <th>Quantity Sold</th>
      <th>Amount contribution</th>
      <th>Total Offer applied</th>
      
    </tr>
  </thead>
  <tbody>
    <% result.categoryDetails.forEach((cat,ind) => { %>
      <tr>
        <td><%=ind+1 %></td>
        <td><%= cat.categoryName %></td>
        <td><%= cat.totalQuantitySold %></td>
        <td><%= cat.totalPrice %></td>
        <td><%= cat. totalOfferDiscount.toFixed(2) %></td>
        
      </tr>
    <% }) %>
  </tbody>
</table>
<h2>Best Selling Publications</h2>
<table class=" book-table">
  <thead>
    <tr>
      <th>Top five</th>
      <th>Publication</th>
      <th>Quantity Sold</th>
      <th>Amount contribution</th>
      <th>Total Offer applied</th>
      
    </tr>
  </thead>
  <tbody>
    <% result.publicationDetails.forEach((pub,ind) => { %>
      <tr>
        <td><%=ind+1 %></td>
        <td><%= pub._id %></td>
        <td><%= pub.totalQuantitySold %></td>
        <td><%= pub.totalPrice %></td>
        <td><%= pub. totalOfferDiscount.toFixed(2) %></td>
        
      </tr>
    <% }) %>
  </tbody>
</table>
<h2>Best Selling Authors</h2>
<table class=" book-table">
  <thead>
    <tr>
      <th>Top five</th>
      <th>Authors</th>
      <th>Quantity Sold</th>
      <th>Amount contribution</th>
      <th>Total Offer applied</th>
    </tr>
  </thead>
  <tbody>
    <% result.authorDetails.forEach((auth,ind) => { %>
      <tr>
        <td><%=ind+1 %></td>
        <td><%= auth._id %></td>
        <td><%= auth.totalQuantitySold %></td>
        <td><%= auth.totalPrice %></td>
        <td><%= auth. totalOfferDiscount.toFixed(2) %></td>
      </tr>
    <% }) %>
  </tbody>
</table>
<h2>Top customers</h2>
<table class=" book-table">
  <thead>
    <tr>
      <th>Top ten</th>
      <th>username</th>
      <th>Email</th>
      <th>Purchased Amount</th>
      <th>No:of orders</th>
      
    </tr>
  </thead>
  <tbody>
    <% result.userDetails.forEach((user,ind) => { %>
      <tr>
        <td><%=ind+1 %></td>
        <td><%= user.username %></td>
        <td><%= user.email %></td>
        <td><%=user.orderAmount %></td>
        <td><%=user.orderCount %></td>
        
      </tr>
    <% }) %>
  </tbody>
</table>

            
        
  </main>

</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
   
    const filterType = document.getElementById('filterType');
    const customDateRange = document.getElementById('customDateRange');

    filterType.addEventListener('change', () => {
      if (filterType.value === 'custom') {
        customDateRange.style.display = 'block';
      } else {
        customDateRange.style.display = 'none';
      }
    });

    
    filterType.dispatchEvent(new Event('change'));

    const statusData = JSON.parse('<%- JSON.stringify(result.statusCount) %>')
    

  const labels = statusData.map(s => s._id.charAt(0).toUpperCase() + s._id.slice(1));
  const orderCounts = statusData.map(s => s.count);
  const netAmounts = statusData.map(s => s.totalAmount);

  const totalOrders = orderCounts.reduce((a, b) => a + b, 0);
  const totalAmount = netAmounts.reduce((a, b) => a + b, 0);

  const statusColorMap = {
    initiated: '#ffc107',
  processing: '#0d6efd',
  delivered: '#198754',
  cancelled: '#fd7e14',
  shipped: '#20c997',
  returned: '#dc3545',
  orderRequested:'#dc3556',
  itemRequested:'#dc3580',
  'Payment Failed':'#6c757d',
  'Partial return':'#664d03',
  rejected:'#000'

};

const backgroundColors = labels.map(label => {
  // Normalize: remove spaces and convert to lowercase
  const normalizedLabel = label.toLowerCase().replace(/\s+/g, '');
  const color = Object.entries(statusColorMap).find(([key]) => {
    return normalizedLabel === key.toLowerCase().replace(/\s+/g, '');
  });

  return color ? color[1] : '#999999'; // fallback
});



  // Chart 1: Count of Orders per Status (Bar)
  const ctx1 = document.getElementById('orderStatusCountChart').getContext('2d');
  new Chart(ctx1, {
    type: 'bar',
    data: {
      labels: labels,
      datasets: [{
        label: 'Order Count',
        data: orderCounts,
        backgroundColor: 'rgba(75, 192, 192, 0.7)',
        borderColor: 'rgba(75, 192, 192, 1)',
        borderWidth: 1
      }]
    },
    options: {
      plugins: {
        title: {
          display: true,
          text: `Order Status Distribution - Total Orders: ${totalOrders}`
        }
      },
      scales: {
        y: { beginAtZero: true }
      }
    }
  });

  // Chart 2: Net Amount per Status (Pie)
  const ctx2 = document.getElementById('orderStatusAmountChart').getContext('2d');
  new Chart(ctx2, {
    type: 'doughnut',
    data: {
      labels: labels,
      datasets: [{
        label: 'Net Amount by Status',
        data: netAmounts,
        backgroundColor: backgroundColors,
        hoverOffset: 10
      }]
    },
    
    options: {
  responsive: true,
  maintainAspectRatio: false,
  plugins: {
    title:{
      display:true,
      text:`Net Amount Contribution by Status - Total: â‚¹${totalAmount.toFixed(2)}`

    },
    legend: {
      position: 'bottom'
    }
  }
}

  });
  

  </script>
</body>
</html>
